/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.nonlimitedregister.standardisedfields;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StandardisedFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StandardisedFields\",\"namespace\":\"com.equifax.fabric.uk.nonlimitedregister.standardisedfields\",\"fields\":[{\"name\":\"BUSINESS_INDEX_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"Business index ID\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"BUSINESS_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Business name\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PROCESSING_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Date on which data loaded on Data Fabric\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"FORMAT_OF_SUPPLY\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates format of supplied file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"MIGRATION_FLAG\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"entity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"entityFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity\",\"fields\":[{\"name\":\"commercial\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"commercialFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.commercial\",\"fields\":[{\"name\":\"legacyIds\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"legacyIdFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.commercial.legacyids\",\"fields\":[{\"name\":\"LEGACY_ID_COMPANY_REGISTERED_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Company Number\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"identifiers\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"identifierFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.commercial.identifiers\",\"fields\":[{\"name\":\"NAME_BUSINESS_COMPANY_TYPE\",\"type\":[\"null\",\"string\"],\"doc\":\"Type of company - L for Limited\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_VAT\",\"type\":[\"null\",\"string\"],\"doc\":\"VAT number field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_EMAIL\",\"type\":[\"null\",\"string\"],\"doc\":\"EMAIL ID field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DISSOLVED_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Dissolution Date field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_INCORPORATION_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Date of incorporation in CCYYMMDD format\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_UPDATE_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"This is load date and will be a system date \",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DATA_SOURCE\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates source of data\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"website\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Supplied Websites\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"phones\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Supplied Phone number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"names\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Standardised Company Names as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"addresses\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Standardised postcode as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"discoveryData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"discoveryDataFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.commercial.discoverydata\",\"fields\":[{\"name\":\"DISCOVERY_CLIENT_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Client Number for INSIGHT_ACCOUNT and CCDS_ACCOUNT asset\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_ACCOUNT_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Account Number for INSIGHT_ACCOUNT \",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_FACILITY_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Facility Number for CCDS_ACCOUNT\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_DEFENDENT_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"Defendent ID for COURT_JUDGMENT\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_DRC_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"DRC_ID for NONLIMITED_REGISTER\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_URN\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique reference number of COMPANY_CIFAS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CASE_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"Case ID of COMPANY_CIFAS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CLN_BUSINESS_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Cleansed business name \",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Business index ID */
  @Deprecated public java.lang.CharSequence BUSINESS_INDEX_ID;
  /** Business name */
  @Deprecated public java.lang.CharSequence BUSINESS_NAME;
  /** Date on which data loaded on Data Fabric */
  @Deprecated public java.lang.CharSequence PROCESSING_DATE;
  /** Indicates format of supplied file */
  @Deprecated public java.lang.CharSequence FORMAT_OF_SUPPLY;
  /** Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live */
  @Deprecated public java.lang.CharSequence MIGRATION_FLAG;
  @Deprecated public com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.entityFields entity;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public StandardisedFields() {}

  /**
   * All-args constructor.
   */
  public StandardisedFields(java.lang.CharSequence BUSINESS_INDEX_ID, java.lang.CharSequence BUSINESS_NAME, java.lang.CharSequence PROCESSING_DATE, java.lang.CharSequence FORMAT_OF_SUPPLY, java.lang.CharSequence MIGRATION_FLAG, com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.entityFields entity) {
    this.BUSINESS_INDEX_ID = BUSINESS_INDEX_ID;
    this.BUSINESS_NAME = BUSINESS_NAME;
    this.PROCESSING_DATE = PROCESSING_DATE;
    this.FORMAT_OF_SUPPLY = FORMAT_OF_SUPPLY;
    this.MIGRATION_FLAG = MIGRATION_FLAG;
    this.entity = entity;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return BUSINESS_INDEX_ID;
    case 1: return BUSINESS_NAME;
    case 2: return PROCESSING_DATE;
    case 3: return FORMAT_OF_SUPPLY;
    case 4: return MIGRATION_FLAG;
    case 5: return entity;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: BUSINESS_INDEX_ID = (java.lang.CharSequence)value$; break;
    case 1: BUSINESS_NAME = (java.lang.CharSequence)value$; break;
    case 2: PROCESSING_DATE = (java.lang.CharSequence)value$; break;
    case 3: FORMAT_OF_SUPPLY = (java.lang.CharSequence)value$; break;
    case 4: MIGRATION_FLAG = (java.lang.CharSequence)value$; break;
    case 5: entity = (com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.entityFields)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'BUSINESS_INDEX_ID' field.
   * Business index ID   */
  public java.lang.CharSequence getBUSINESSINDEXID() {
    return BUSINESS_INDEX_ID;
  }

  /**
   * Sets the value of the 'BUSINESS_INDEX_ID' field.
   * Business index ID   * @param value the value to set.
   */
  public void setBUSINESSINDEXID(java.lang.CharSequence value) {
    this.BUSINESS_INDEX_ID = value;
  }

  /**
   * Gets the value of the 'BUSINESS_NAME' field.
   * Business name   */
  public java.lang.CharSequence getBUSINESSNAME() {
    return BUSINESS_NAME;
  }

  /**
   * Sets the value of the 'BUSINESS_NAME' field.
   * Business name   * @param value the value to set.
   */
  public void setBUSINESSNAME(java.lang.CharSequence value) {
    this.BUSINESS_NAME = value;
  }

  /**
   * Gets the value of the 'PROCESSING_DATE' field.
   * Date on which data loaded on Data Fabric   */
  public java.lang.CharSequence getPROCESSINGDATE() {
    return PROCESSING_DATE;
  }

  /**
   * Sets the value of the 'PROCESSING_DATE' field.
   * Date on which data loaded on Data Fabric   * @param value the value to set.
   */
  public void setPROCESSINGDATE(java.lang.CharSequence value) {
    this.PROCESSING_DATE = value;
  }

  /**
   * Gets the value of the 'FORMAT_OF_SUPPLY' field.
   * Indicates format of supplied file   */
  public java.lang.CharSequence getFORMATOFSUPPLY() {
    return FORMAT_OF_SUPPLY;
  }

  /**
   * Sets the value of the 'FORMAT_OF_SUPPLY' field.
   * Indicates format of supplied file   * @param value the value to set.
   */
  public void setFORMATOFSUPPLY(java.lang.CharSequence value) {
    this.FORMAT_OF_SUPPLY = value;
  }

  /**
   * Gets the value of the 'MIGRATION_FLAG' field.
   * Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live   */
  public java.lang.CharSequence getMIGRATIONFLAG() {
    return MIGRATION_FLAG;
  }

  /**
   * Sets the value of the 'MIGRATION_FLAG' field.
   * Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live   * @param value the value to set.
   */
  public void setMIGRATIONFLAG(java.lang.CharSequence value) {
    this.MIGRATION_FLAG = value;
  }

  /**
   * Gets the value of the 'entity' field.
   */
  public com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.entityFields getEntity() {
    return entity;
  }

  /**
   * Sets the value of the 'entity' field.
   * @param value the value to set.
   */
  public void setEntity(com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.entityFields value) {
    this.entity = value;
  }

  /** Creates a new StandardisedFields RecordBuilder */
  public static com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder();
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder other) {
    return new com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing StandardisedFields instance */
  public static com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields other) {
    return new com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /**
   * RecordBuilder for StandardisedFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StandardisedFields>
    implements org.apache.avro.data.RecordBuilder<StandardisedFields> {

    private java.lang.CharSequence BUSINESS_INDEX_ID;
    private java.lang.CharSequence BUSINESS_NAME;
    private java.lang.CharSequence PROCESSING_DATE;
    private java.lang.CharSequence FORMAT_OF_SUPPLY;
    private java.lang.CharSequence MIGRATION_FLAG;
    private com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.entityFields entity;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.BUSINESS_INDEX_ID)) {
        this.BUSINESS_INDEX_ID = data().deepCopy(fields()[0].schema(), other.BUSINESS_INDEX_ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.BUSINESS_NAME)) {
        this.BUSINESS_NAME = data().deepCopy(fields()[1].schema(), other.BUSINESS_NAME);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PROCESSING_DATE)) {
        this.PROCESSING_DATE = data().deepCopy(fields()[2].schema(), other.PROCESSING_DATE);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.FORMAT_OF_SUPPLY)) {
        this.FORMAT_OF_SUPPLY = data().deepCopy(fields()[3].schema(), other.FORMAT_OF_SUPPLY);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.MIGRATION_FLAG)) {
        this.MIGRATION_FLAG = data().deepCopy(fields()[4].schema(), other.MIGRATION_FLAG);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.entity)) {
        this.entity = data().deepCopy(fields()[5].schema(), other.entity);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing StandardisedFields instance */
    private Builder(com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields other) {
            super(com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.SCHEMA$);
      if (isValidValue(fields()[0], other.BUSINESS_INDEX_ID)) {
        this.BUSINESS_INDEX_ID = data().deepCopy(fields()[0].schema(), other.BUSINESS_INDEX_ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.BUSINESS_NAME)) {
        this.BUSINESS_NAME = data().deepCopy(fields()[1].schema(), other.BUSINESS_NAME);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PROCESSING_DATE)) {
        this.PROCESSING_DATE = data().deepCopy(fields()[2].schema(), other.PROCESSING_DATE);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.FORMAT_OF_SUPPLY)) {
        this.FORMAT_OF_SUPPLY = data().deepCopy(fields()[3].schema(), other.FORMAT_OF_SUPPLY);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.MIGRATION_FLAG)) {
        this.MIGRATION_FLAG = data().deepCopy(fields()[4].schema(), other.MIGRATION_FLAG);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.entity)) {
        this.entity = data().deepCopy(fields()[5].schema(), other.entity);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'BUSINESS_INDEX_ID' field */
    public java.lang.CharSequence getBUSINESSINDEXID() {
      return BUSINESS_INDEX_ID;
    }
    
    /** Sets the value of the 'BUSINESS_INDEX_ID' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder setBUSINESSINDEXID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.BUSINESS_INDEX_ID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'BUSINESS_INDEX_ID' field has been set */
    public boolean hasBUSINESSINDEXID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'BUSINESS_INDEX_ID' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder clearBUSINESSINDEXID() {
      BUSINESS_INDEX_ID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'BUSINESS_NAME' field */
    public java.lang.CharSequence getBUSINESSNAME() {
      return BUSINESS_NAME;
    }
    
    /** Sets the value of the 'BUSINESS_NAME' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder setBUSINESSNAME(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.BUSINESS_NAME = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'BUSINESS_NAME' field has been set */
    public boolean hasBUSINESSNAME() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'BUSINESS_NAME' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder clearBUSINESSNAME() {
      BUSINESS_NAME = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'PROCESSING_DATE' field */
    public java.lang.CharSequence getPROCESSINGDATE() {
      return PROCESSING_DATE;
    }
    
    /** Sets the value of the 'PROCESSING_DATE' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder setPROCESSINGDATE(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.PROCESSING_DATE = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'PROCESSING_DATE' field has been set */
    public boolean hasPROCESSINGDATE() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'PROCESSING_DATE' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder clearPROCESSINGDATE() {
      PROCESSING_DATE = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'FORMAT_OF_SUPPLY' field */
    public java.lang.CharSequence getFORMATOFSUPPLY() {
      return FORMAT_OF_SUPPLY;
    }
    
    /** Sets the value of the 'FORMAT_OF_SUPPLY' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder setFORMATOFSUPPLY(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.FORMAT_OF_SUPPLY = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'FORMAT_OF_SUPPLY' field has been set */
    public boolean hasFORMATOFSUPPLY() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'FORMAT_OF_SUPPLY' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder clearFORMATOFSUPPLY() {
      FORMAT_OF_SUPPLY = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'MIGRATION_FLAG' field */
    public java.lang.CharSequence getMIGRATIONFLAG() {
      return MIGRATION_FLAG;
    }
    
    /** Sets the value of the 'MIGRATION_FLAG' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder setMIGRATIONFLAG(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.MIGRATION_FLAG = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'MIGRATION_FLAG' field has been set */
    public boolean hasMIGRATIONFLAG() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'MIGRATION_FLAG' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder clearMIGRATIONFLAG() {
      MIGRATION_FLAG = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'entity' field */
    public com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.entityFields getEntity() {
      return entity;
    }
    
    /** Sets the value of the 'entity' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder setEntity(com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.entityFields value) {
      validate(fields()[5], value);
      this.entity = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'entity' field has been set */
    public boolean hasEntity() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'entity' field */
    public com.equifax.fabric.uk.nonlimitedregister.standardisedfields.StandardisedFields.Builder clearEntity() {
      entity = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public StandardisedFields build() {
      try {
        StandardisedFields record = new StandardisedFields();
        record.BUSINESS_INDEX_ID = fieldSetFlags()[0] ? this.BUSINESS_INDEX_ID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.BUSINESS_NAME = fieldSetFlags()[1] ? this.BUSINESS_NAME : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.PROCESSING_DATE = fieldSetFlags()[2] ? this.PROCESSING_DATE : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.FORMAT_OF_SUPPLY = fieldSetFlags()[3] ? this.FORMAT_OF_SUPPLY : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.MIGRATION_FLAG = fieldSetFlags()[4] ? this.MIGRATION_FLAG : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.entity = fieldSetFlags()[5] ? this.entity : (com.equifax.fabric.uk.ingestion.nonlimitedregister.standardisedfields.entity.entityFields) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
